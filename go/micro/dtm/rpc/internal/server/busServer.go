// Code generated by goctl. DO NOT EDIT!
// Source: bus.proto

package server

import (
	"context"

	"study/micro/dtm/rpc/bus"
	"study/micro/dtm/rpc/internal/logic"
	"study/micro/dtm/rpc/internal/svc"
)

type BusServer struct {
	svcCtx *svc.ServiceContext
}

func NewBusServer(svcCtx *svc.ServiceContext) *BusServer {
	return &BusServer{
		svcCtx: svcCtx,
	}
}

func (s *BusServer) Ping(ctx context.Context, in *bus.Request) (*bus.Response, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *BusServer) XaNotify(ctx context.Context, in *bus.XaRequest) (*bus.XaResponse, error) {
	l := logic.NewXaNotifyLogic(ctx, s.svcCtx)
	return l.XaNotify(in)
}
